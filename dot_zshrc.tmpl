# vim: ft=zsh

# zsh template ---

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="afowler"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
)

source $ZSH/oh-my-zsh.sh

# load custom completions
fpath+=~/.config/zsh
autoload -U compinit && compinit

unsetopt SHARE_HISTORY
unsetopt INC_APPEND_HISTORY
setopt APPEND_HISTORY

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# end zsh template ---

# own zsh config
export TERM='xterm-256color'
export LANG="en_US.UTF-8"
bindkey -v
bindkey '^R' history-incremental-search-backward
setopt ignoreeof
set -o vi

# aliases
alias cmaker=cmake -DCMAKE_BUILD_TYPE=Release
alias cmaked=cmake -DCMAKE_BUILD_TYPE=Debug

function detach { nohup "$1" > /dev/null&; }

# we would prefer first matching filenames (with a priority of length) and
# then match directories with a lower priority, but this is apparently not
# possible, so we choose to just match filenames
export FZF_DEFAULT_OPTS="--delimiter=/ --nth=-1,.. --tiebreak=end"
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_CTRL_T_COMMAND="fd"

export KEYTIMEOUT=1
export EDITOR=/usr/bin/nvim
export VISUAL=/usr/bin/nvim

## Colorize the ls output ##
alias ls='ls --color=auto'
alias l='ls --color=auto'
alias g='git'
alias senv='source env/bin/activate'

export LS_COLORS='rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:'

# set zsh vi mode cursor colorings
# should clean this up, particularly the colorings (extract from theme)
CURSOR_COLOR_PREFIX="\033]12;"
CURSOR_COLOR_SUFFIX="\007"

NORMAL_COLOR="#afdf00"
INSERT_COLOR="Grey"
VISUAL_COLOR="#ff8700"
REPLACE_COLOR="#df0000"
PENDING_COLOR="#5555e0"

change_cursor_color () {
    echo -ne $CURSOR_COLOR_PREFIX$1$CURSOR_COLOR_SUFFIX
}

# overriding the draw command appears to be necessary to restore the command color when coming out of visual mode --
# I could not find a widget that gets invoked at that time, instead we just check if we're in cmd mode with an empty selection
function zle-keymap-select {
if [ $KEYMAP = viins ]; then
change_cursor_color $INSERT_COLOR
fi
}
zle -N zle-keymap-select

zle-line-pre-redraw () {
if [ $KEYMAP = vicmd ] && [ $REGION_ACTIVE = 0 ]; then
change_cursor_color $NORMAL_COLOR
fi
if [ $KEYMAP = viins ]; then
change_cursor_color $INSERT_COLOR
fi
}
zle -N zle-line-pre-redraw

vi-open-line-above () {
change_cursor_color $INSERT_COLOR
zle .vi-open-line-above
}
zle -N vi-open-line-above

vi-open-line-below () {
change_cursor_color $INSERT_COLOR
zle .vi-open-line-below
}
zle -N vi-open-line-below

vi-add-next () {
change_cursor_color $INSERT_COLOR
zle .vi-add-next
}
zle -N vi-add-next

vi-insert-bol () {
change_cursor_color $INSERT_COLOR
zle .vi-insert-bol
}
zle -N vi-insert-bol

vi-add-eol () {
change_cursor_color $INSERT_COLOR
zle .vi-add-eol
}
zle -N vi-add-eol

# this should use a pending color, but there is not a state change that I have found after the actual change movement has been selected
vi-change () {
change_cursor_color $INSERT_COLOR
zle .vi-change
}
zle -N vi-change

vi-substitute () {
change_cursor_color $INSERT_COLOR
zle .vi-substitute
}
zle -N vi-substitute

vi-change-eol () {
change_cursor_color $REPLACE_COLOR
zle .vi-change-eol
}
zle -N vi-change-eol

vi-change-whole-line () {
change_cursor_color $INSERT_COLOR
zle .vi-change-whole-line
}
zle -N vi-change-whole-line

vi-replace () {
zle .vi-replace
change_cursor_color $REPLACE_COLOR
}
zle -N vi-replace

vi-replace-chars () {
zle .vi-replace-chars
change_cursor_color $REPLACE_COLOR
}
zle -N vi-replace-chars

visual-mode () {
change_cursor_color $VISUAL_COLOR
zle .visual-mode
}
zle -N visual-mode

vi-insert () {
change_cursor_color $INSERT_COLOR
zle .vi-insert
}
zle -N vi-insert

vi-cmd-mode () {
change_cursor_color $NORMAL_COLOR
zle .vi-cmd-mode
}
zle -N vi-cmd-mode

visual-line-mode () {
change_cursor_color $VISUAL_COLOR
zle .visual-line-mode
}
zle -N visual-line-mode

#this will place us in our preferred mode by default
zle-line-init () {
#vi-cmd-mode
vi-insert
}
#zle -N zle-line-init
#

{{ if .has_local_templates}}
{{ template "local/dot_zshrc" }}
{{ end }}
